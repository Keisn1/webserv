#+title: Notes Kay

- [X] have a complete Equal check function of ServerConfig
- [X] all of the tests probably fit into maximum of 2 tests (those which throw error and those where you test for equalness)
- [X] the same for test_config_ast.cpp and test_config_events.cpp
- [X] Naming
  - [X] test_Router.cpp (not test_http_routing)
  - [X] ValidationRules sounds like a struct but not like a class
    - [X] what is it supposed to do (why is it not requestValidator?)
- [X] why is there a buildAST function in the tests (why is getAst public in the parser? If nobody is supposed to use it?)
- [X] the CommonConfig constructor is needless
- [X] why does the router match return the host (which is actually part of the request)?
- [X] the Router is not concerned with which port the request came from. Somebody is responsible of choosing the right Router for the port
* TODO
- [X] change throwing of std::runtime_error to something that makes sense
- [X] no error is thrown when there is no ";" in
  #+begin_src conf
index       index.html index.htm
  #+end_src
- [X] cgi - only on location level
- [X] oneMB as default if clientMaxBody is not set
- [X] talk to Eric about oneMB const
- [X] restrict config allowedMethods to GET, POST, DELETE
- [X] insert Routing
- [X] make reset public on HttpParser
- [X] test for requests with longer bodies
  - [X] test for long responses where sent needs to happen more than once
  - [X] make the read and send methods adjustable in buffer size
  - [X] rename to _headersBuf and _bodyBuf
** DONE listener
- [X] Listener call ConnectionHandler for multiple descriptors and notifications
- [X] revisit listener tests and make them independent of Logging
- [X] see if you can write a better test for the listener
- [X] refactor listenerTests
** DONE Uploadhandler
1. [X] don't upload to same file simultaneously
2. [X] don't remove file (test for broken connection basically)
3. [X] only reply with a response once!
** TODO ResponseWriter
- [ ] responseWrite needs to fill out necessary headers
- [ ] it's the reason why some clients don't close the connection
** TODO connection Handling (architecture)
- [-] implement different router for different ports
  - [X] also handle cases where the routing is failing
  - [X] multiple routers in connectionhandler
  - [X] probably need to change from ports to complete address of the socket
  - [X] build with multiple routers
  - [X] use the real port instead of the string in the config
  - [ ] maybe need to seperate address from port
- [ ] test the tester
  - [ ] need to find out about Put requests and how to do the .bla extension stuff

- [ ] router needs to handle cgi
  - [ ] check on how to differentiate between cgi and other handlers

- [ ] implement HTTP redirect

- [ ] add a test that really uploads a file
  - [ ] make sure that all the file descriptors are closed
    - [ ] also a test for a broken connection and then the file should be closed
  - [ ] add tests for normal UploadHandler to close the files after successful upload
  - [ ] test for overlapping uploadBody and headers of following request

- [ ] Rework sending the Response
  - [ ] there is still == 400 in the onSocketWrite

- [ ] better error handling in the ConfigParser
  - [ ] right now the Core Dumps (maybe just exit with the appropriate error message)

- [-] handle ClientHungUp
  - [X] BrokenConnection just removes the connection
  - [ ] check how ClientHungUp affects the behavior
  - [ ] write a test that makes sure, that a response is being send, even though the connection is closed
  - [ ] check out this comment that you wrote [[file:tests/unittests/test_ConnHdlrTestWithIntegerAsParameter.cpp::// TODO: if we were to detach the thread just after launching it, the clientfd might be closed (Teardown) before we]]

- [-] implement TimeoutMechanism (stale connections, connections that are kept open after receiving a response)
  - [X] built the mechanism inside notifier
  - [ ] log the timeout correctly
  - [ ] change interface of handleConnection (only take a t_notif)
  - [ ] test that the connection is removed from ioNotifier when the connectionHandler is called with a timeout
- [X] probably change IHandler handle interface (add ConnectionInfo to it)
- [X] normalization of uri needs to be done before routing
- [X] test a config with no serverNames
  - [X] one time without the directive
  - [X] one time with directive but empty
