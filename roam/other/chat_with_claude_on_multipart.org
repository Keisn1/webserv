:PROPERTIES:
:GPTEL_MODEL: claude-3-7-sonnet-20250219
:GPTEL_BACKEND: Claude
:GPTEL_SYSTEM: You are a large language model living in Emacs and a helpful assistant. Avoid long answers.
:GPTEL_BOUNDS: ((response (370 403) (537 897) (898 1078) (1290 2039) (2129 2956)))
:END:

*** I'm developping an http server where I want to be able to upload data. Therefore I'm using Content-Type: multipart/form-data. The data, especially the body, is arriving in chunks. So each time that i encounter a boundary, I need to parse some headers again.
   #+begin_src http
   POST /upload HTTP/1.1
   Host: example.com
   Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

   ------WebKitFormBoundary7MA4YWxkTrZu0gW
   Content-Disposition: form-data; name="file"; filename="example.txt"
   Content-Type: text/plain

   ...file contents...
   ------WebKitFormBoundary7MA4YWxkTrZu0gW
   Content-Disposition: form-data; name="file"; filename="example.txt"
   Content-Type: text/plain

   ...file contents...
   ------WebKitFormBoundary7MA4YWxkTrZu0gW--
   #+end_src
   What I'm mostly concerned with right-now, is when I read some file content, how do I know if it still belongs to the file content or maybe is already the seperator line (boundary) which I'm looking out for?

To determine if a line is part of the file content or a boundary:

1. Check if the current line starts with the boundary string (usually prefixed with "--")
2. Be careful with binary files that might contain sequences that look like the boundary
3. The proper approach is to scan for "\r\n--boundary" or "\n--boundary" sequences

A common implementation strategy:
#+begin_src
buffer = read_chunk()
boundary_position = buffer.find("\r\n" + boundary_string)
if boundary_position != -1:
    file_content = buffer[:boundary_position]
    # Process boundary and headers that follow
else:
    file_content = buffer
    # Continue reading more chunks
#+end_src

The key is to maintain a buffer that can handle boundary strings possibly split across chunks.

*** what are valid header fields? How do I recognize if I'm in the file content again?

**Valid multipart form header fields:*

- =Content-Disposition=: Required. Indicates form field name and optional filename.
- =Content-Type=: Specifies MIME type of the content.
- =Content-Transfer-Encoding=: Encoding method (though less common with HTTP).

*Recognizing when you're in file content:*

1. Headers and content are separated by a blank line (CRLF + CRLF or "\r\n\r\n")
2. After parsing headers, everything until the next boundary is file content
3. The process is:
   - Find boundary
   - Parse headers until empty line
   - Consume data as file content until next boundary

Example parsing logic:
#+begin_src
STATE_BOUNDARY → STATE_HEADERS → STATE_CONTENT → STATE_BOUNDARY
#+end_src

Once you encounter the empty line after headers (two consecutive newlines), you know the file content begins immediately after.

***
