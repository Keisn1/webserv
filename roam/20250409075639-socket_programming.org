:PROPERTIES:
:ID:       a6df6013-b9e1-434f-af10-0dafda983bc9
:END:
#+title: socket programming
#+date: [2025-04-09 Wed 07:56]
#+startup: overview

* what is a socket
- a socket is a concept generally referred two if two parties want to exchange data in two directions
- it is an standardized abstraction/network interface provided by the OS to give you network communication capabilities
- they behave/look much like file-descriptors but they have a two-ways behavior
  - the number returned is representing a network endpoint
- besides sockets which allow parties to communicate over a computer network, there are also sockets which facilitate the communication between processes inside the same computer ([[https://en.wikipedia.org/wiki/Unix_domain_socket][UDS - UNIX domain sockets]])
- for network communication, we usually speak about Berkeley sockets
  - man 2 socket =<sys/socket.h>= =socket()=
  - this library function is part of POSIX and came out of =BSD= (Berkeley Software Distribution - Berkeley Socket)
    #+begin_example
HISTORY
       POSIX.1-2001, 4.4BSD.
       socket() appeared in 4.2BSD.  It is generally portable to/from non-BSD systems supporting clones of the BSD socket layer (including System V variants).
       ...
    #+end_example

* SOCK_STREAM sockets
- they are full-duplex byte streams
  - it means that receiving and sending data can happen at the same time without interfering with each other
- in the POSIX API, one can send data via read/write or variant of send/recv
- they queue up connections until BACKLOG limit is hit
  (=int listen(int sockfd, int backlog)=)

* [[id:73718bca-3b14-4888-addf-984719c83c2f][Asynchronous I/O communication]]

* API
** [[id:605ee64d-ee8f-4d89-bec8-07822a2f9ee3][socket library function]]
** [[id:370a29f0-3734-47d5-9d79-e7341bb429b0][addrinfo]]
